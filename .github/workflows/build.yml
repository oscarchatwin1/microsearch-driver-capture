name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-8-jdk
        sudo apt-get install -y git zip unzip curl
        sudo apt-get install -y python3-pip python3-venv
        sudo apt-get install -y build-essential libffi-dev libssl-dev
        sudo apt-get install -y python3-dev python3-setuptools
        
    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install buildozer cython
        pip install kivy[base] pyjnius plyer
        pip install pymysql
        
    - name: Debug buildozer config
      run: |
        echo "Buildozer version:"
        buildozer --version
        echo "Buildozer config:"
        cat buildozer.spec | head -20
        echo "Python files:"
        ls -la *.py
        echo "Config files:"
        ls -la *.json
        
    - name: Clean previous builds
      run: |
        echo "Cleaning previous builds..."
        rm -rf .buildozer bin/
        
    - name: Build APK
      run: |
        echo "Starting buildozer build..."
        buildozer android debug
      continue-on-error: true
      
    - name: Check build results
      run: |
        echo "=== Build Results ==="
        echo "Current directory:"
        pwd
        echo "Directory contents:"
        ls -la
        echo "Bin directory contents:"
        ls -la bin/ || echo "No bin directory found"
        echo "Buildozer directory contents:"
        ls -la .buildozer/ || echo "No .buildozer directory found"
        echo "Buildozer logs:"
        find .buildozer -name "*.log" -exec echo "=== {} ===" \; -exec tail -20 {} \; || echo "No build logs found"
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: microsearch-driver-apk
        path: bin/*.apk
        retention-days: 30
        
    - name: Create release (commented out - requires tag)
      if: false
      run: |
        echo "Release creation disabled - APK available as artifact"
        echo "To create releases, add a Git tag first"
